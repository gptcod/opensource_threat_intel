# -*- coding: utf-8 -*-
import scrapy
from scrapy.spiders import CrawlSpider,Rule
from scrapy import Request
from ..items import OpensourceThreatIntelItem
#from django.conf.urls import url
from scrapy.linkextractors import LinkExtractor
import time
from scrapy.selector import Selector

class Spider(CrawlSpider):
    name = "malwaredomainlist"
    #allowed_domains = ["malwaredomainlist.com"]
    start_urls = [
	    'http://www.malwaredomainlist.com/mdl.php',
        'http://www.malwaredomainlist.com',
	]
    rules = (
       Rule(LinkExtractor(allow='mdl.php\S+'),callback='parse_1',follow=True),
    )
    
    def start_requests(self):
        for url in self.start_urls:
            yield Request(url)
    def parse_1(self, response):
            sel = Selector(response)
            trs = sel.xpath('//*[@class="table"]/tr')
            lines = response.body.split('\n')
            for i in range(1,len(trs)):
                item = OpensourceThreatIntelItem()
                tr = trs[i]
                now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                item['date'] = tr.xpath('string(td[1])')[0].extract().strip()
                item['domain'] = tr.xpath('string(td[2])')[0].extract().strip()
                item['ip'] = tr.xpath('string(td[3])')[0].extract().strip()
                item['reverse'] = tr.xpath('string(td[4])')[0].extract().strip()
                item['description'] = tr.xpath('string(td[5])')[0].extract().strip()
                item['registrant'] = tr.xpath('string(td[6])')[0].extract().strip()
                item['asn'] = tr.xpath('string(td[7])')[0].extract().strip()
                item['updated_time'] = 'none'
                item['created_time'] = now_time
                yield item